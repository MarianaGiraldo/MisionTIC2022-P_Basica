/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Classes.*;
import Controller.ctlPet;
import java.awt.HeadlessException;
import java.util.Iterator;
import java.util.LinkedList;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;

/**
 *
 * @author maria
 */
public class frmPet extends javax.swing.JFrame {
    ctlPet ctlPet;
    
    LinkedList<clsPet> dogObjectList = new LinkedList<>();
    LinkedList<clsPet> catObjectList = new LinkedList<>();
    
    /**
     * Creates new form frmPet
     */
    public frmPet() {
        this.ctlPet = new ctlPet();
        initComponents();
        this.dogObjectList = ctlPet.ListPet("Dog");
        this.catObjectList = ctlPet.ListPet("Cat");
        this.FillJlist();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PetManager = new javax.swing.JTabbedPane();
        PanelCatManager = new javax.swing.JPanel();
        LabelCodeCat = new javax.swing.JLabel();
        txtCodeCat = new javax.swing.JTextField();
        labelNameCat = new javax.swing.JLabel();
        txtNameCat = new javax.swing.JTextField();
        labelBornYearCat = new javax.swing.JLabel();
        txtBornYearCat = new javax.swing.JTextField();
        labelColorCat = new javax.swing.JLabel();
        txtColorCat = new javax.swing.JTextField();
        labelHealthStatusCat = new javax.swing.JLabel();
        cbHealthStatusCat = new javax.swing.JComboBox<>();
        labelBreedCat = new javax.swing.JLabel();
        cbBreedCat = new javax.swing.JComboBox<>();
        CreateCat = new javax.swing.JButton();
        SearchCat = new javax.swing.JButton();
        EditCat = new javax.swing.JButton();
        DeleteCat = new javax.swing.JButton();
        txtcatId = new javax.swing.JTextField();
        catIdLabel = new javax.swing.JLabel();
        txtpetIdCat = new javax.swing.JTextField();
        petIdLabelCat = new javax.swing.JLabel();
        PanelDogManager = new javax.swing.JPanel();
        txtBornYearDog = new javax.swing.JTextField();
        labelBreedDog = new javax.swing.JLabel();
        labelColorDog = new javax.swing.JLabel();
        cbBreedDog = new javax.swing.JComboBox<>();
        txtColorDog = new javax.swing.JTextField();
        CreateDog = new javax.swing.JButton();
        SearchDog = new javax.swing.JButton();
        EditDog = new javax.swing.JButton();
        DeleteDog = new javax.swing.JButton();
        LabelCodeDog = new javax.swing.JLabel();
        txtCodeDog = new javax.swing.JTextField();
        labelNameDog = new javax.swing.JLabel();
        txtNameDog = new javax.swing.JTextField();
        labelHealthStatusDog = new javax.swing.JLabel();
        labelBornYearDog = new javax.swing.JLabel();
        cbHealthStatusDog = new javax.swing.JComboBox<>();
        cbPedigreeDog = new javax.swing.JCheckBox();
        txtpetIdDog = new javax.swing.JTextField();
        petIdLabelDog = new javax.swing.JLabel();
        txtdogId = new javax.swing.JTextField();
        dogIdLabel = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        PetList = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setName("frmPet"); // NOI18N
        setResizable(false);

        LabelCodeCat.setText("Code:");

        txtCodeCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodeCatActionPerformed(evt);
            }
        });

        labelNameCat.setText("Name:");

        labelBornYearCat.setText("Born Year:");

        txtBornYearCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBornYearCatActionPerformed(evt);
            }
        });

        labelColorCat.setText("Color:");

        labelHealthStatusCat.setText("Health Status:");

        cbHealthStatusCat.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sick", "Healthy" }));
        cbHealthStatusCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbHealthStatusCatActionPerformed(evt);
            }
        });

        labelBreedCat.setText("Breed");

        cbBreedCat.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Birdman", "Persian", "Another" }));
        cbBreedCat.setName(""); // NOI18N
        cbBreedCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbBreedCatActionPerformed(evt);
            }
        });

        CreateCat.setText("Create");
        CreateCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateCatActionPerformed(evt);
            }
        });

        SearchCat.setText("Search");
        SearchCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchCatActionPerformed(evt);
            }
        });

        EditCat.setText("Edit");
        EditCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditCatActionPerformed(evt);
            }
        });

        DeleteCat.setText("Delete");
        DeleteCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteCatActionPerformed(evt);
            }
        });

        txtcatId.setEditable(false);
        txtcatId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcatIdActionPerformed(evt);
            }
        });

        catIdLabel.setText("catId:");

        txtpetIdCat.setEditable(false);
        txtpetIdCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtpetIdCatActionPerformed(evt);
            }
        });

        petIdLabelCat.setText("petId:");

        javax.swing.GroupLayout PanelCatManagerLayout = new javax.swing.GroupLayout(PanelCatManager);
        PanelCatManager.setLayout(PanelCatManagerLayout);
        PanelCatManagerLayout.setHorizontalGroup(
            PanelCatManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelCatManagerLayout.createSequentialGroup()
                .addGroup(PanelCatManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelCatManagerLayout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(petIdLabelCat)
                        .addGap(10, 10, 10)
                        .addComponent(txtpetIdCat, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(110, 110, 110))
                    .addGroup(PanelCatManagerLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(PanelCatManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(PanelCatManagerLayout.createSequentialGroup()
                                .addComponent(CreateCat)
                                .addGap(40, 40, 40)
                                .addComponent(SearchCat)
                                .addGap(16, 16, 16))
                            .addGroup(PanelCatManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(PanelCatManagerLayout.createSequentialGroup()
                                    .addComponent(LabelCodeCat)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                                    .addComponent(txtCodeCat, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(PanelCatManagerLayout.createSequentialGroup()
                                    .addGroup(PanelCatManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(labelBornYearCat)
                                        .addComponent(labelHealthStatusCat))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(PanelCatManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtBornYearCat, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                                        .addComponent(cbHealthStatusCat, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                        .addGap(29, 29, 29)))
                .addGroup(PanelCatManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelCatManagerLayout.createSequentialGroup()
                        .addGroup(PanelCatManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(PanelCatManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(PanelCatManagerLayout.createSequentialGroup()
                                    .addGap(2, 2, 2)
                                    .addComponent(labelBreedCat))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelCatManagerLayout.createSequentialGroup()
                                    .addGroup(PanelCatManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(labelColorCat, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(labelNameCat, javax.swing.GroupLayout.Alignment.TRAILING))
                                    .addGap(15, 15, 15)))
                            .addGroup(PanelCatManagerLayout.createSequentialGroup()
                                .addComponent(EditCat)
                                .addGap(10, 10, 10)))
                        .addGroup(PanelCatManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanelCatManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(txtColorCat, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtNameCat, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(PanelCatManagerLayout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(cbBreedCat, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(PanelCatManagerLayout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addComponent(DeleteCat))))
                    .addGroup(PanelCatManagerLayout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(catIdLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtcatId, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        PanelCatManagerLayout.setVerticalGroup(
            PanelCatManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelCatManagerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelCatManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelCatManagerLayout.createSequentialGroup()
                        .addComponent(txtNameCat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtColorCat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addComponent(cbBreedCat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanelCatManagerLayout.createSequentialGroup()
                        .addGroup(PanelCatManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(LabelCodeCat)
                            .addComponent(txtCodeCat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelNameCat))
                        .addGap(18, 18, 18)
                        .addGroup(PanelCatManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelBornYearCat)
                            .addComponent(txtBornYearCat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelColorCat))
                        .addGap(38, 38, 38)
                        .addGroup(PanelCatManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelHealthStatusCat)
                            .addComponent(cbHealthStatusCat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelBreedCat))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PanelCatManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelCatManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtpetIdCat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(petIdLabelCat))
                    .addGroup(PanelCatManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtcatId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(catIdLabel)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addGroup(PanelCatManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SearchCat)
                    .addComponent(CreateCat)
                    .addComponent(EditCat)
                    .addComponent(DeleteCat))
                .addGap(30, 30, 30))
        );

        PetManager.addTab("Cat Manager", PanelCatManager);

        txtBornYearDog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBornYearDogActionPerformed(evt);
            }
        });

        labelBreedDog.setText("Breed");

        labelColorDog.setText("Color:");

        cbBreedDog.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Criollo", "Husky", "Golden Retriever", "Bobtail", "Bulldog", "Another" }));
        cbBreedDog.setName(""); // NOI18N
        cbBreedDog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbBreedDogActionPerformed(evt);
            }
        });

        CreateDog.setText("Create");
        CreateDog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateDogActionPerformed(evt);
            }
        });

        SearchDog.setText("Search");
        SearchDog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchDogActionPerformed(evt);
            }
        });

        EditDog.setText("Edit");
        EditDog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditDogActionPerformed(evt);
            }
        });

        DeleteDog.setText("Delete");
        DeleteDog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteDogActionPerformed(evt);
            }
        });

        LabelCodeDog.setText("Code:");

        txtCodeDog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodeDogActionPerformed(evt);
            }
        });

        labelNameDog.setText("Name:");

        labelHealthStatusDog.setText("Health Status:");

        labelBornYearDog.setText("Born Year:");

        cbHealthStatusDog.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sick", "Healthy" }));
        cbHealthStatusDog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbHealthStatusDogActionPerformed(evt);
            }
        });

        cbPedigreeDog.setText("Pedigree");
        cbPedigreeDog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbPedigreeDogActionPerformed(evt);
            }
        });

        txtpetIdDog.setEditable(false);
        txtpetIdDog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtpetIdDogActionPerformed(evt);
            }
        });

        petIdLabelDog.setText("petId:");

        txtdogId.setEditable(false);
        txtdogId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtdogIdActionPerformed(evt);
            }
        });

        dogIdLabel.setText("dogId:");

        javax.swing.GroupLayout PanelDogManagerLayout = new javax.swing.GroupLayout(PanelDogManager);
        PanelDogManager.setLayout(PanelDogManagerLayout);
        PanelDogManagerLayout.setHorizontalGroup(
            PanelDogManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelDogManagerLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(PanelDogManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(PanelDogManagerLayout.createSequentialGroup()
                        .addComponent(CreateDog)
                        .addGap(40, 40, 40)
                        .addComponent(SearchDog)
                        .addGap(16, 16, 16))
                    .addGroup(PanelDogManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(PanelDogManagerLayout.createSequentialGroup()
                            .addComponent(LabelCodeDog)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtCodeDog, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(PanelDogManagerLayout.createSequentialGroup()
                            .addComponent(labelBornYearDog)
                            .addGap(22, 22, 22)
                            .addComponent(txtBornYearDog, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(29, 29, 29)
                .addGroup(PanelDogManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(PanelDogManagerLayout.createSequentialGroup()
                        .addGroup(PanelDogManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelColorDog, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(labelNameDog, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(15, 15, 15))
                    .addGroup(PanelDogManagerLayout.createSequentialGroup()
                        .addComponent(EditDog)
                        .addGap(10, 10, 10)))
                .addGroup(PanelDogManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelDogManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(txtColorDog, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtNameDog, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanelDogManagerLayout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(DeleteDog)))
                .addContainerGap(41, Short.MAX_VALUE))
            .addGroup(PanelDogManagerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelDogManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelHealthStatusDog)
                    .addComponent(petIdLabelDog, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PanelDogManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbHealthStatusDog, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtpetIdDog, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(PanelDogManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelDogManagerLayout.createSequentialGroup()
                        .addComponent(labelBreedDog)
                        .addGap(5, 5, 5)
                        .addComponent(cbBreedDog, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanelDogManagerLayout.createSequentialGroup()
                        .addComponent(dogIdLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtdogId, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cbPedigreeDog)
                .addGap(16, 16, 16))
        );
        PanelDogManagerLayout.setVerticalGroup(
            PanelDogManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelDogManagerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelDogManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelDogManagerLayout.createSequentialGroup()
                        .addGroup(PanelDogManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(LabelCodeDog)
                            .addComponent(txtCodeDog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelNameDog))
                        .addGap(18, 18, 18)
                        .addGroup(PanelDogManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelBornYearDog)
                            .addComponent(txtBornYearDog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelColorDog)))
                    .addGroup(PanelDogManagerLayout.createSequentialGroup()
                        .addComponent(txtNameDog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtColorDog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(34, 34, 34)
                .addGroup(PanelDogManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelDogManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cbBreedDog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cbPedigreeDog))
                    .addGroup(PanelDogManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(labelHealthStatusDog)
                        .addComponent(cbHealthStatusDog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(labelBreedDog))
                .addGap(18, 18, 18)
                .addGroup(PanelDogManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelDogManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtpetIdDog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(petIdLabelDog))
                    .addGroup(PanelDogManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtdogId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(dogIdLabel)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addGroup(PanelDogManagerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SearchDog)
                    .addComponent(CreateDog)
                    .addComponent(EditDog)
                    .addComponent(DeleteDog))
                .addGap(30, 30, 30))
        );

        PetManager.addTab("Dog Manager", PanelDogManager);

        PetList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Pet 1", "Pet 2", "Pet 3" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(PetList);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 462, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        PetManager.addTab("Pet List", jPanel1);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Pet Manager");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PetManager)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(177, 177, 177)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(PetManager, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbPedigreeDogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbPedigreeDogActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbPedigreeDogActionPerformed

    private void cbHealthStatusDogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbHealthStatusDogActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbHealthStatusDogActionPerformed

    private void txtCodeDogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodeDogActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCodeDogActionPerformed

    private void DeleteDogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteDogActionPerformed
        String code = txtCodeDog.getText();
        boolean found = false;
        for (clsPet dog: dogObjectList) {
            if (dog.getCode().equals(code)){
                this.dogObjectList.remove(dog);
                this.clearDogFields();
                this.FillJlist();
                JOptionPane.showMessageDialog(this, "Record removed successfuly");
                found = true;
                break;
            }
        }
        if(!found){
            JOptionPane.showMessageDialog(this, "Code not found");
        }
        
    }//GEN-LAST:event_DeleteDogActionPerformed

    private void CreateDogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateDogActionPerformed
        //JOptionPane.showMessageDialog(this, "Esto es una prueba desde crear perro");
        try {
            String code = txtCodeDog.getText();
            String name = txtNameDog.getText();
            String color = txtColorDog.getText();
            int bornYear = Integer.parseInt(txtBornYearDog.getText());
            String breed = cbBreedDog.getSelectedItem().toString();
            String healthStatus = cbHealthStatusDog.getSelectedItem().toString();
            boolean pedigree = cbPedigreeDog.isSelected();

            if(code.equals("") || name.equals("") || color.equals("")){
                JOptionPane.showMessageDialog(this, "Fill all fields");
            }else{
                clsDog dog = new clsDog(0, breed, pedigree, 0, code, name, bornYear, color, healthStatus);
                //dogObjectList.add(dog);
                ctlPet.CreatePet(dog);
                this.FillJlist();
                this.clearDogFields();
                JOptionPane.showMessageDialog(this, "The record has been saved");
            }

        }catch(HeadlessException | NumberFormatException e){
            JOptionPane.showMessageDialog(this, "Please add a valid born year");
            System.out.println(e);
        }
    }//GEN-LAST:event_CreateDogActionPerformed

    private void cbBreedDogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbBreedDogActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbBreedDogActionPerformed

    private void txtBornYearDogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBornYearDogActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBornYearDogActionPerformed

    private void DeleteCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteCatActionPerformed
        String code = txtCodeCat.getText();
        boolean found = false;
        for (clsPet cat: catObjectList) {
            if (cat.getCode().equals(code)){
                ctlPet.DeletePet(cat);
                this.catObjectList.remove(cat);
                this.clearDogFields();
                this.FillJlist();
                JOptionPane.showMessageDialog(this, "Record removed successfuly");
                found = true;
                break;
            }
        }
        if(!found){
            JOptionPane.showMessageDialog(this, "Code not found");
        }
        
    }//GEN-LAST:event_DeleteCatActionPerformed

    private void CreateCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateCatActionPerformed
        try {
            String code = txtCodeCat.getText();
            String name = txtNameCat.getText();
            String color = txtColorCat.getText();
            int bornYear = Integer.parseInt(txtBornYearCat.getText());
            String breed = cbBreedCat.getSelectedItem().toString();
            String healthStatus = cbHealthStatusCat.getSelectedItem().toString();
            
            if(code.equals("") || name.equals("") || color.equals("")){
                JOptionPane.showMessageDialog(this, "Fill all fields");
            }else{
                clsCat cat = new clsCat(0, breed, 0, code, name, bornYear, color, healthStatus);
                //catObjectList.add(cat);
                ctlPet.CreatePet(cat);
                this.FillJlist();
                this.clearCatFields();
                JOptionPane.showMessageDialog(this, "The record has been saved");
            }

        }catch(HeadlessException | NumberFormatException e){
            JOptionPane.showMessageDialog(this, "Please add a valid born year");
            System.out.println(e);
        }
    }//GEN-LAST:event_CreateCatActionPerformed

    private void cbBreedCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbBreedCatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbBreedCatActionPerformed

    private void cbHealthStatusCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbHealthStatusCatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbHealthStatusCatActionPerformed

    private void txtBornYearCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBornYearCatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBornYearCatActionPerformed

    private void txtCodeCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodeCatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCodeCatActionPerformed

    private void SearchDogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchDogActionPerformed
        String code = txtCodeDog.getText();
        
        clsDog dog = (clsDog)ctlPet.SearchPet(code, "Dog");
        
        if(dog == null){
            JOptionPane.showMessageDialog(this, "Code not found");
        }else{
            txtpetIdDog.setText(dog.getPetId()+"");
            txtdogId.setText(dog.getDogId()+"");
            txtNameDog.setText(dog.getName());
            txtColorDog.setText(dog.getColor());
            txtBornYearDog.setText(dog.getBorn_year() + "");
            cbHealthStatusDog.setSelectedItem(dog.getHealth_Status());
            cbBreedDog.setSelectedItem(dog.getBreed());
            cbPedigreeDog.setSelected(dog.isPedigree());
                
        }
    }//GEN-LAST:event_SearchDogActionPerformed

    private void SearchCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchCatActionPerformed
        String code = txtCodeCat.getText();
        clsCat cat = (clsCat)ctlPet.SearchPet(code, "Cat");
        
        if(cat == null){
            JOptionPane.showMessageDialog(this, "Code not found");
        }else{
            txtpetIdCat.setText(cat.getPetId()+"");
            txtcatId.setText(cat.getCatId()+"");
            txtNameCat.setText(cat.getName());
            txtColorCat.setText(cat.getColor());
            txtBornYearCat.setText(cat.getBorn_year() + "");
            cbHealthStatusCat.setSelectedItem(cat.getHealth_Status());
            cbBreedCat.setSelectedItem(cat.getBreed());
                
        }
    }//GEN-LAST:event_SearchCatActionPerformed

    private void EditDogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditDogActionPerformed
        String code = txtCodeDog.getText();
        String name = txtNameDog.getText();
        String color = txtColorDog.getText();
        int bornYear = Integer.parseInt(txtBornYearDog.getText());
        String breed = cbBreedDog.getSelectedItem().toString();
        String healthStatus = cbHealthStatusDog.getSelectedItem().toString();
        boolean pedigree = cbPedigreeDog.isSelected();
        try {
            int petId = Integer.parseInt(txtpetIdDog.getText());
            int dogId = Integer.parseInt(txtdogId.getText());
            clsDog dog = new clsDog(dogId, breed, pedigree, petId, code, name, bornYear, color, healthStatus);
            boolean response = ctlPet.EditPet(dog);
            if(response){
                JOptionPane.showMessageDialog(this, "Record updated");
                this.clearDogFields();
            }else{
                JOptionPane.showMessageDialog(this, "Error updating the record");
            }
            
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "You have to search the record to update it.");
        }
       
        
    }//GEN-LAST:event_EditDogActionPerformed

    private void EditCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditCatActionPerformed
        String code = txtCodeCat.getText();
        String name = txtNameCat.getText();
        String color = txtColorCat.getText();
        int bornYear = Integer.parseInt(txtBornYearCat.getText());
        String breed = cbBreedCat.getSelectedItem().toString();
        String healthStatus = cbHealthStatusCat.getSelectedItem().toString();
        try {
            int petId = Integer.parseInt(txtpetIdCat.getText());
            int catId = Integer.parseInt(txtcatId.getText());
            clsCat cat = new clsCat(catId, breed, petId, code, name, bornYear, color, healthStatus);
            boolean response = ctlPet.EditPet(cat);
            
            if(response){
                JOptionPane.showMessageDialog(this, "Record updated");
                this.clearCatFields();
            }else{
                JOptionPane.showMessageDialog(this, "Error updating the record");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "You have to search the record to update it.");
        }
       
    }//GEN-LAST:event_EditCatActionPerformed

    private void txtpetIdDogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtpetIdDogActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtpetIdDogActionPerformed

    private void txtdogIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtdogIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtdogIdActionPerformed

    private void txtcatIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcatIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcatIdActionPerformed

    private void txtpetIdCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtpetIdCatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtpetIdCatActionPerformed

    private void FillJlist(){
        DefaultListModel model = new DefaultListModel();
        int index = 0;
        for (clsPet dog : dogObjectList) {       
            String data = dog.getName()+ " - "+ dog.getCode() + " - Dog";
            model.add(index, data);
            index++;
        }
        for (clsPet cat : catObjectList) {       
            String data = cat.getName()+ " - "+ cat.getCode() + " - Cat";
            model.add(index, data);
            index++;
        }
        
        PetList.setModel(model);
    }
    
    private void clearDogFields() {
        txtCodeDog.setText("");
        txtNameDog.setText("");
        txtColorDog.setText("");
        txtBornYearDog.setText("");
        cbBreedDog.setSelectedIndex(0);
        cbHealthStatusDog.setSelectedIndex(0);
        cbPedigreeDog.setSelected(false);
        txtpetIdDog.setText("");
        txtdogId.setText("");
    }
    
    private void clearCatFields() {
        txtCodeCat.setText("");
        txtNameCat.setText("");
        txtColorCat.setText("");
        txtBornYearCat.setText("");
        cbBreedCat.setSelectedIndex(0);
        cbHealthStatusCat.setSelectedIndex(0);
        txtpetIdCat.setText("");
        txtcatId.setText("");
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmPet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmPet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmPet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmPet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmPet().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CreateCat;
    private javax.swing.JButton CreateDog;
    private javax.swing.JButton DeleteCat;
    private javax.swing.JButton DeleteDog;
    private javax.swing.JButton EditCat;
    private javax.swing.JButton EditDog;
    private javax.swing.JLabel LabelCodeCat;
    private javax.swing.JLabel LabelCodeDog;
    private javax.swing.JPanel PanelCatManager;
    private javax.swing.JPanel PanelDogManager;
    private javax.swing.JList<String> PetList;
    private javax.swing.JTabbedPane PetManager;
    private javax.swing.JButton SearchCat;
    private javax.swing.JButton SearchDog;
    private javax.swing.JLabel catIdLabel;
    private javax.swing.JComboBox<String> cbBreedCat;
    private javax.swing.JComboBox<String> cbBreedDog;
    private javax.swing.JComboBox<String> cbHealthStatusCat;
    private javax.swing.JComboBox<String> cbHealthStatusDog;
    private javax.swing.JCheckBox cbPedigreeDog;
    private javax.swing.JLabel dogIdLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelBornYearCat;
    private javax.swing.JLabel labelBornYearDog;
    private javax.swing.JLabel labelBreedCat;
    private javax.swing.JLabel labelBreedDog;
    private javax.swing.JLabel labelColorCat;
    private javax.swing.JLabel labelColorDog;
    private javax.swing.JLabel labelHealthStatusCat;
    private javax.swing.JLabel labelHealthStatusDog;
    private javax.swing.JLabel labelNameCat;
    private javax.swing.JLabel labelNameDog;
    private javax.swing.JLabel petIdLabelCat;
    private javax.swing.JLabel petIdLabelDog;
    private javax.swing.JTextField txtBornYearCat;
    private javax.swing.JTextField txtBornYearDog;
    private javax.swing.JTextField txtCodeCat;
    private javax.swing.JTextField txtCodeDog;
    private javax.swing.JTextField txtColorCat;
    private javax.swing.JTextField txtColorDog;
    private javax.swing.JTextField txtNameCat;
    private javax.swing.JTextField txtNameDog;
    private javax.swing.JTextField txtcatId;
    private javax.swing.JTextField txtdogId;
    private javax.swing.JTextField txtpetIdCat;
    private javax.swing.JTextField txtpetIdDog;
    // End of variables declaration//GEN-END:variables

    
}
